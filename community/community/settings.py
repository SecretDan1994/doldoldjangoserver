"""
Django settings for community project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""


# superuser login: admin / roIJ*=hjod/;df



import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_ROOT = os.path.dirname(os.path.realpath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'qf+dglpc^tu)-#s(hb14+v0+wxjwf(m19u6ju*6_pst@4_&bwt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['elevatedgaming.net']

LOGIN_URL = "/auth/steam/login/"

LOGOUT_REDIRECT_URL = "/"

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.humanize',

    'guardian',
    'channels',

    'ordered_model',
    'bootstrapform',

    'stats',
    'steamauthprovider',
    'suggestions',
    'base',
    'forum',
    'usersettings',
#    'punishments'
]

#django toolbar
if DEBUG:
    INSTALLED_APPS += [
        'debug_toolbar',

        'django_uwsgi',
        'template_timings_panel',
        'debug_toolbar_line_profiler',
        'pympler'
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'community.urls'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'steamauthprovider.models.SteamAuthBackend',

    'guardian.backends.ObjectPermissionBackend'#last
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(PROJECT_ROOT, 'templates')],
        'OPTIONS': {
            'context_processors': ['django.contrib.auth.context_processors.auth',
                                   'django.template.context_processors.debug',
                                   'django.template.context_processors.i18n',
                                   'django.template.context_processors.media',
                                   'django.template.context_processors.static',
                                   'django.template.context_processors.request',
                                   'base.context_processors.generic_data',
                                   'django.contrib.messages.context_processors.messages',
            ],
            'loaders': [
                ('django.template.loaders.cached.Loader', 
                    ['django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                    'django.template.loaders.eggs.Loader',]
                )
            ],
        },
    },
]

WSGI_APPLICATION = 'community.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.postgresql_psycopg2',
       'NAME': 'community',
       'USER': 'community',
       'CONN_MAX_AGE': 500,
       'PASSWORD': 'kodYe=dsf1*/',
       'HOST': 'localhost',
       'PORT': '5433'
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media')

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = '/media/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

DATA_UPLOAD_MAX_NUMBER_FIELDS = None

CLEAR_CACHE_ON_RESTART = True
CACHE_MIDDLEWARE_ANONYMOUS_ONLY = True
CACHES = {
    'default': {
        'BACKEND': 'redis_cache.ShardedRedisCache',
        'LOCATION': '/var/run/redis/redis.sock',
        'OPTIONS': {
            'DB': 1,
            'PARSER_CLASS': 'redis.connection.HiredisParser',
            }
    },
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "CONFIG": {
            "hosts": ["unix:///var/run/redis/redis.sock"],
            "capacity": 10000,
            "channel_capacity": {
                "websocket.send*": 10010,
            },
        },
#        "BACKEND": "asgi_ipc.IPCChannelLayer",
#        "CONFIG": {
#            "prefix": "community",
#        },
        "ROUTING": "community.routing.channel_routing",
    },
}

# CELERY STUFF
BROKER_URL = 'redis+socket:///var/run/redis/redis.sock'
CELERY_RESULT_BACKEND = 'redis+socket:///var/run/redis/redis.sock'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
CELERY_QUEUES = {
    "celery": {
        "routing_key":"celery",
    },
    'lowpriority': {
        'binding_key':'lowpriority.#',
    },
}
from datetime import timedelta
CELERYBEAT_SCHEDULE = {
    "refresh-gs-cache-s": {
        "task": "stats.tasks.gs_cache_checker",
        "schedule": timedelta(minutes=2),
    },
    "refresh-steam-cache-s": {
        "task": "base.tasks.steam_cache_checker",
        "schedule": timedelta(minutes=5),
    },
}

ABSOLUTE_URL = "elevatedgaming.net:82"
STEAM_API_KEY = "11FA6D9E6DE6E0272EA1CDB0AE940797"

#SITE_SETTINGS = {
#    "FORUM_META_DESCRIPTION": "EgN, an online gaming community.",
#    "FORUM_META_KEYWORDS": "gaming, community, egn, Elevated Gaming Network",
#    "FORUM_BASE_TITLE": "The Elevated Gaming Network",
#    "NOTICE": None,
#    "DISABLED": False, # only superuser has access.
#    "AUTHOR":"Doldol / http://steamcommunity.com/id/Doldol/",
#}

def show_toolbar(request):
    return not request.is_ajax() and request.user.is_superuser
DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK" : show_toolbar,
}
DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
    'template_timings_panel.panels.TemplateTimings.TemplateTimings',
    'debug_toolbar_line_profiler.panel.ProfilingPanel',
    'django_uwsgi.panels.UwsgiPanel',
    'debug_toolbar.panels.timer.TimerDebugPanel',
    'pympler.panels.MemoryPanel',
]